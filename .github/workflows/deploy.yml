name: Deploy to Hetzner

on:
  push:
    branches: ['main']
    paths-ignore:    # 이러한 파일들이 변경되었을 때는 워크플로우를 실행하지 않음
      - '**.md'      # 모든 마크다운 파일
      - 'docu/**'    # docs 폴더의 모든 파일
      - 'README.md'  # README.md 파일
      - 'LICENSE'    # LICENSE 파일
      - '.gitignore' # .gitignore 파일
      - 'data/**'    # data 폴더의 모든 파일

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3 # Get code from GitHub repository
        
      - name: Deploy to Hetzner via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HETZNER_IP }}
          username: ${{ secrets.HETZNER_USER }}
          key: ${{ secrets.HETZNER_SSH_KEY }}
          port: ${{ secrets.HETZNER_PORT }}  # Specify SSH port (or other port number used by the server)
          debug: true 
          script: |
            # 1. SSH Configuration
            cd ~
            mkdir -p ~/.ssh
            ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
            # → Set up SSH for GitHub access
            
            # 2. Prepare Project Directory
            # Create project folder if it doesn't exist
            mkdir -p project
            cd project
            # → Create and move to project directory
            
            # 3. Get Code
            # Clone if git repository doesn't exist, pull if it does
            if [ ! -d .git ]; then
              rm -rf ./* # Remove existing files if any
              git clone 
            else
              git pull origin main
            fi
            # → If no git repository: Clone new
            # → If git repository exists: Get latest code

            docker-compose down
            # Clean up previous image
            docker rmi wwtb-client
           
            docker-compose up -d --build